apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'jacoco'

ext.build_tools_version = '23.0.1'
ext.sdk_version = build_tools_version.tokenize('.')[0].toInteger()
ext.support_version = "$sdk_version.+"

repositories {
    maven { url 'https://jitpack.io' }
}

android {
    compileSdkVersion sdk_version
    buildToolsVersion build_tools_version

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    defaultConfig {
        applicationId 'org.channelsurfer.android'
        minSdkVersion 15
        targetSdkVersion 21
        versionCode 1
        versionName '1.0'
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile "com.android.support:appcompat-v7:$support_version"
    compile "com.android.support:cardview-v7:$support_version"
    compile "com.android.support:recyclerview-v7:$support_version"
    compile 'com.github.mcginty:material-colors:1.0.1'
    compile 'com.github.salomonbrys.kotson:kotson:1.4.0'
    compile 'com.mcxiaoke.volley:library:1.0.19'
    compile 'com.mikepenz:iconics-core:1.7.6@aar'
    compile 'com.mikepenz:google-material-typeface:1.2.0.1@aar'
    compile 'com.mikepenz:community-material-typeface:1.2.64.1@aar'
    compile 'org.jetbrains.anko:anko-sdk15:0.7'
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    compile 'org.ocpsoft.prettytime:prettytime:4.0.0.Final'
    testCompile('org.robolectric:robolectric:3.0') {
        exclude group: 'commons-logging', module: 'commons-logging'
        exclude group: 'org.apache.httpcomponents', module: 'httpclient'
    }
    androidTestCompile 'com.jayway.android.robotium:robotium-solo:5.5.1'
}

jacoco {
    version = '0.7.5.201505241946'
}

task jacocoTestReport(type: JacocoReport) {
    group = "Reporting"
    description = "Generates Jacoco coverage reports: XML and HTML"

    // use hidden configuration, for details look into JacocoPlugin.groovy
    jacocoClasspath = project.configurations['androidJacocoAnt']

    def fileFilter = ['**/R.class',
                      '**/R$*.class',
                      '**/BuildConfig.*',
                      '**/Manifest*.*',
                      '**/*Test*.*',
                      'android/**/*.*',
                      '**/*$$special$$inlined$observable$*.*']

    def debugTree = fileTree(dir: "$project.buildDir/intermediates/classes/debug", excludes: fileFilter)

    sourceDirectories = files(["$project.projectDir/src/main/java"])
    classDirectories = files([debugTree])
    executionData = fileTree(dir: project.projectDir, includes: ['**/*.exec', '**/*.ec'])

    reports {
        xml.enabled = true
        xml.destination = "$project.buildDir/reports/jacoco/test/jacocoTestReport.xml"
        csv.enabled = false
        html.enabled = true
        html.destination = "$project.buildDir/reports/jacoco"
    }
}
